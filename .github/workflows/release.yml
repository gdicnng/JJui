name: Windows Release Test

on:
  push:
    tags:
      - "*"

jobs:
  jobs_1: # build exe 
    
    strategy:
      matrix:
        architecture: [ x86 , x64 ] # python
        python_version: [ "3.10","3.11" ] # python version
        os: [ windows-2019, windows-2022] # windows-latest or windows-2022
    
    runs-on: ${{ matrix.os }} 
    
    defaults:
      run:
        shell: cmd
    
    steps:
    - name: checkout
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python_version }}
        architecture: ${{ matrix.architecture }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        python -m pip install --upgrade wheel
        python -m pip install pillow
        python -m pip install pyinstaller
    
    - name: pyinstaller to exe
      run: |
        call .windows_build_exe_use_pyinstaller.bat
    - name: 7z
      run: |
        7z a -t7z "JJui_${{ github.ref_name }}_${{ matrix.os }}_python_${{ matrix.python_version }}_${{ matrix.architecture }}.7z" .\dist\*
        dir
    - name: upload
      uses: actions/upload-artifact@v3
      with:
        name: "JJui_${{ github.ref_name }}_${{ matrix.os }}_python_${{ matrix.python_version }}_${{ matrix.architecture }}"
        path: "JJui_${{ github.ref_name }}_${{ matrix.os }}_python_${{ matrix.python_version }}_${{ matrix.architecture }}.7z"
      
        

  jobs_2: # release
    needs: jobs_1
    
    runs-on: windows-latest
    
    permissions:
      contents: write
    
    defaults:
      run:
        shell: cmd
    
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: download
      uses: actions/download-artifact@v3
      with:
        path: artifacts 
        # name 未指定名称，每一个文件，会包含在一个文件夹里
    - name: list file
      run: |
        dir
        echo ......
        dir artifacts
        echo ......
        tree artifacts /F
    - name: release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "artifacts/**/*.7z"
        token: ${{ secrets.GITHUB_TOKEN }}
